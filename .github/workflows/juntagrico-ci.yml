# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: juntagrico-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, 'releases/**' ]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: settings.dev
      PYTHONPATH: .
      EXCLUDE_TEST: ${{ matrix.exclude-test }}
      COVERAGE_FILE: coverage${{ matrix.exclude-test }}
    strategy:
      matrix:
        include:
          - python-version: '3.9'
          - python-version: '3.10'
          - python-version: '3.11'
          - python-version: '3.11'
            exclude-test: shares

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_DATABASE: mysql
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: install dependencies
      run: |
        pip install --upgrade -r requirements.txt
        pip install psycopg2 mysqlclient
    - name: ruff
      run: |
        ruff check juntagrico
    - name: run tests on mysql
      run: |
        python -m django makemigrations --noinput
        python -m manage test --exclude-tag=$EXCLUDE_TEST
      env:
        GITHUB_MYSQL: 1
    - name: run tests on postgres
      run: |
        python -m django makemigrations --noinput
        coverage run -m manage test --exclude-tag=$EXCLUDE_TEST
        python -m manage test juntagrico.tests.test_deploy --settings="settings.deployment"
    - run: coverage lcov -o coverage-${{ matrix.exclude-test }}.lcov
      if: ${{ matrix.python-version  == '3.11' && github.event_name == 'push' }}
    - uses: actions/upload-artifact@v4
      if: ${{ matrix.python-version  == '3.11' && github.event_name == 'push' }}
      with:
        name: coverage-${{ matrix.exclude-test }}
        path: coverage-${{ matrix.exclude-test }}.lcov

  coverage:
    name: Coverage Report
    if: ${{ matrix.python-version  == '3.11' && github.event_name == 'push' }}
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: coverage
          merge-multiple: true
      - uses: qltysh/qlty-action/coverage@v2
        with:
          token: {{secrets.CODECOV_TOKEN}}
          files: coverage*.lcov

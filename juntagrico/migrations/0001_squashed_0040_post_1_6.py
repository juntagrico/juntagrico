# Generated by Django 4.2.8 on 2024-01-06 23:13

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import juntagrico.entity
import juntagrico.entity.share
import juntagrico.util.temporal


class Migration(migrations.Migration):

    replaces = [('juntagrico', '0001_initial'), ('juntagrico', '0002_auto_20170922_1204'), ('juntagrico', '0003_auto_20171013_2124'), ('juntagrico', '0004_auto_20171017_2102'), ('juntagrico', '0005_subscription_notes'), ('juntagrico', '0006_auto_20171102_1622'), ('juntagrico', '0007_auto_20171222_0000'), ('juntagrico', '0008_auto_20180130_2321'), ('juntagrico', '0009_auto_20180206_1702'), ('juntagrico', '0010_auto_20180210_2142'), ('juntagrico', '0011_auto_20180225_1206'), ('juntagrico', '0012_auto_20180509_2300'), ('juntagrico', '0013_auto_20180807_2049'), ('juntagrico', '0014_listmessage'), ('juntagrico', '0015_auto_20180924_2053'), ('juntagrico', '0016_auto_20190402_0832'), ('juntagrico', '0017_auto_20190625_1013'), ('juntagrico', '0018_auto_20191019_2031'), ('juntagrico', '0019_auto_20191127_1012'), ('juntagrico', '0020_auto_20200123_1044'), ('juntagrico', '0021_auto_20200414_2150'), ('juntagrico', '0022_subscriptionpart'), ('juntagrico', '0023_migrate_sub_parts'), ('juntagrico', '0024_auto_20200415_1710'), ('juntagrico', '0025_auto_20200708_2236'), ('juntagrico', '0026_auto_20200710_2250'), ('juntagrico', '0027_auto_20200921_0817'), ('juntagrico', '0028_subscriptionmembership'), ('juntagrico', '0029_auto_20200810_0748'), ('juntagrico', '0030_auto_20201112_0812'), ('juntagrico', '0031_pre_1_4'), ('juntagrico', '0032_data_1_4'), ('juntagrico', '0033_post_1_4'), ('juntagrico', '0034_auto_20210415_2041'), ('juntagrico', '0035_pre_1_5'), ('juntagrico', '0036_data_1_5'), ('juntagrico', '0037_post_1_5'), ('juntagrico', '0038_pre_1_6'), ('juntagrico', '0039_data_1_6'), ('juntagrico', '0040_post_1_6')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='SpecialRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (
                ('is_operations_group', 'Benutzer ist in der BG'), ('is_book_keeper', 'Benutzer ist Buchhalter'),
                ('can_send_mails', 'Benutzer kann im System E-Mails versenden'),
                ('can_use_general_email', 'Benutzer kann allgemeine E-Mail-Adresse verwenden'),
                ('can_use_for_members_email', 'Benutzer kann E-Mail-Adresse "for_members" verwenden'),
                ('can_use_for_subscriptions_email', 'Benutzer kann E-Mail-Adresse "for_subscription" verwenden'),
                ('can_use_for_shares_email', 'Benutzer kann E-Mail-Adresse "for_shares" verwenden'),
                ('can_use_technical_email', 'Benutzer kann technische E-Mail-Adresse verwenden'),
                ('depot_list_notification', 'Benutzer wird bei Depot-Listen-Erstellung informiert'),
                ('can_view_exports', 'Benutzer kann Exporte öffnen'), ('can_view_lists', 'Benutzer kann Listen öffnen'),
                ('can_generate_lists', 'Benutzer kann Listen erzeugen')),
                'managed': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ActivityArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(default='', verbose_name='Beschreibung')),
                ('core', models.BooleanField(default=False, verbose_name='Kernbereich')),
                ('hidden', models.BooleanField(default=False,
                                               help_text='Nicht auf der "Tätigkeitsbereiche"-Seite anzeigen. Einsätze bleiben sichtbar.',
                                               verbose_name='versteckt')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Reihenfolge')),
                ('auto_add_new_members', models.BooleanField(default=False,
                                                             help_text='Neue Benutzer werden automatisch zu diesem Tätigkeitsbereich hinzugefügt.',
                                                             verbose_name='Standard Tätigkeitesbereich für neue Benutzer')),
            ],
            options={
                'verbose_name': 'Tätigkeitsbereich',
                'verbose_name_plural': 'Tätigkeitsbereiche',
                'ordering': ['sort_order'],
                'permissions': (('is_area_admin', 'Benutzer ist TätigkeitsbereichskoordinatorIn'),),
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='Billable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polymorphic_ctype',
                 models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='polymorphic_%(app_label)s.%(class)s_set+',
                                   to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Verrechenbare Einheit',
                'verbose_name_plural': 'Verrechenbare Einheiten',
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.BigIntegerField()),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Reihenfolge')),
                ('content_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('polymorphic_ctype',
                 models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='polymorphic_%(app_label)s.%(class)s_set+',
                                   to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Kontakt',
                'verbose_name_plural': 'Kontakte',
                'ordering': ['sort_order'],
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_date', models.DateField(verbose_name='Lieferdatum')),
            ],
            options={
                'verbose_name': 'Lieferung',
                'verbose_name_plural': 'Lieferungen',
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slots', models.PositiveIntegerField(default=0, verbose_name='Plätze')),
                ('infinite_slots', models.BooleanField(default=False, verbose_name='Unendlich Plätze')),
                ('time', models.DateTimeField(verbose_name='Zeitpunkt')),
                ('multiplier', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0)],
                                                 verbose_name='Arbeitseinsatz vielfaches')),
                ('pinned', models.BooleanField(default=False)),
                ('reminder_sent', models.BooleanField(default=False, verbose_name='Reminder verschickt')),
                ('canceled', models.BooleanField(default=False, verbose_name='abgesagt')),
                ('polymorphic_ctype',
                 models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='polymorphic_%(app_label)s.%(class)s_set+',
                                   to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'AbstractJob',
                'verbose_name_plural': 'AbstractJobs',
                'permissions': (('can_edit_past_jobs', 'kann vergangene Jobs editieren'),),
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='JobExtraType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('display_empty', models.CharField(max_length=1000, verbose_name='Icon für fehlendes Extra')),
                ('display_full', models.CharField(max_length=1000, verbose_name='Icon für Extra')),
            ],
            options={
                'verbose_name': 'JobExtraTyp',
                'verbose_name_plural': 'JobExtraTypen',
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='ListMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=256, verbose_name='Nachricht')),
                ('active', models.BooleanField(default=True, verbose_name='aktiv')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Reihenfolge')),
            ],
            options={
                'verbose_name': 'Depot Listen Nachricht',
                'verbose_name_plural': 'Depot Listen Nachrichten',
                'ordering': ['sort_order'],
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, max_length=100, null=True,
                                                 verbose_name='Breitengrad')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, max_length=100, null=True,
                                                  verbose_name='Längengrad')),
                ('addr_street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Strasse & Nr.')),
                ('addr_zipcode', models.CharField(blank=True, max_length=10, null=True, verbose_name='PLZ')),
                ('addr_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ort')),
                ('description', models.TextField(blank=True, default='', verbose_name='Beschreibung')),
                ('visible', models.BooleanField(default=True, help_text='Ort steht bei Einsatz und Depot zur Auswahl',
                                                verbose_name='Sichtbar')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Reihenfolge')),
            ],
            options={
                'verbose_name': 'Ort',
                'verbose_name_plural': 'Orte',
                'ordering': ['sort_order'],
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='MailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('template', models.TextField(default='', verbose_name='Template')),
                ('code', models.TextField(default='', verbose_name='Code')),
            ],
            options={
                'verbose_name': 'MailTemplate',
                'verbose_name_plural': 'MailTemplates',
                'permissions': (('can_load_templates', 'Benutzer kann Templates laden'),),
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Vorname')),
                ('last_name', models.CharField(max_length=30, verbose_name='Nachname')),
                ('email', juntagrico.entity.LowercaseEmailField(max_length=254, unique=True)),
                ('addr_street', models.CharField(max_length=100, verbose_name='Strasse')),
                ('addr_zipcode', models.CharField(max_length=10, verbose_name='PLZ')),
                ('addr_location', models.CharField(max_length=50, verbose_name='Ort')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Geburtsdatum')),
                ('phone', models.CharField(max_length=50, verbose_name='Telefonnr')),
                ('mobile_phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Mobile')),
                ('iban',
                 models.CharField(blank=True, default='', max_length=100, validators=[juntagrico.entity.validate_iban],
                                  verbose_name='IBAN')),
                ('confirmed', models.BooleanField(default=False, verbose_name='E-Mail-Adresse bestätigt')),
                ('reachable_by_email',
                 models.BooleanField(default=False, verbose_name='Kontaktierbar von der Job Seite aus')),
                ('cancellation_date', models.DateField(blank=True, null=True, verbose_name='Kündigungsdatum')),
                ('deactivation_date',
                 models.DateField(blank=True, help_text='Sperrt Login und entfernt von E-Mail-Listen', null=True,
                                  verbose_name='Deaktivierungsdatum')),
                ('end_date', models.DateField(blank=True,
                                              help_text='Voraussichtliches Datum an dem die Mitgliedschaft enden wird. Hat keinen Effekt im System',
                                              null=True, verbose_name='Enddatum')),
                ('notes',
                 models.TextField(blank=True, help_text='Notizen für Administration. Nicht sichtbar für Mitglied',
                                  verbose_name='Notizen')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Mitglieder-Nummer')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='member',
                                              to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mitglied',
                'verbose_name_plural': 'Mitglieder',
                'permissions': [('can_filter_members', 'Benutzer kann Mitglieder filtern'),
                                ('notified_on_member_creation', 'Wird bei Mitglied Erstellung informiert'),
                                ('notified_on_member_cancellation', 'Wird bei Mitglied Kündigung informiert')],
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='SubscriptionProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Reihenfolge')),
                ('is_extra', models.BooleanField(default=False, verbose_name='Ist Zusatzabo Produkt')),
            ],
            options={
                'verbose_name': 'Abo-Produkt',
                'verbose_name_plural': 'Abo-Produkt',
                'ordering': ['sort_order'],
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='SubscriptionSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('long_name', models.CharField(max_length=100, verbose_name='Langer Name')),
                ('units', models.FloatField(verbose_name='Einheiten')),
                ('depot_list', models.BooleanField(default=True, verbose_name='Sichtbar auf Depotliste')),
                ('visible', models.BooleanField(default=True, verbose_name='Sichtbar')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sizes',
                                              to='juntagrico.subscriptionproduct', verbose_name='Produkt')),
            ],
            options={
                'verbose_name': 'Abo-Grösse',
                'verbose_name_plural': 'Abo-Grössen',
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, default='', verbose_name='Beschreibung')),
                ('visible_on_list', models.BooleanField(default=True, verbose_name='Sichtbar auf Listen')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Reihenfolge')),
            ],
            options={
                'verbose_name': 'Ausfahrt',
                'verbose_name_plural': 'Ausfahrten',
                'ordering': ['sort_order'],
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='EmailContact',
            fields=[
                ('contact_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='juntagrico.contact')),
                ('email', models.EmailField(max_length=254, verbose_name='E-Mail')),
            ],
            options={
                'verbose_name': 'E-Mail-Adresse',
                'verbose_name_plural': 'E-Mail-Adresse',
            },
            bases=('juntagrico.contact',),
        ),
        migrations.CreateModel(
            name='MemberContact',
            fields=[
                ('contact_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='juntagrico.contact')),
                ('display',
                 models.CharField(choices=[('E', 'E-Mail'), ('T', 'Telefonnummer'), ('B', 'E-Mail & Telefonnummer')],
                                  default='E', max_length=1, verbose_name='Anzeige')),
            ],
            options={
                'verbose_name': 'Mitglied',
                'verbose_name_plural': 'Mitglieder',
            },
            bases=('juntagrico.contact',),
        ),
        migrations.CreateModel(
            name='OneTimeJob',
            fields=[
                ('job_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='juntagrico.job')),
                ('name', models.CharField(help_text='Eindeutiger Name des Einsatzes', max_length=100, unique=True,
                                          verbose_name='Name')),
                ('displayed_name',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name='Angezeigter Name')),
                ('description', models.TextField(default='', verbose_name='Beschreibung')),
                ('default_duration', models.FloatField(help_text='Standard-Dauer für diese Jobart',
                                                       validators=[django.core.validators.MinValueValidator(0)],
                                                       verbose_name='Dauer in Stunden')),
            ],
            options={
                'verbose_name': 'EinzelJob',
                'verbose_name_plural': 'EinzelJobs',
            },
            bases=('juntagrico.job', models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='PhoneContact',
            fields=[
                ('contact_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='juntagrico.contact')),
                ('phone', models.CharField(max_length=50, verbose_name='Telefonnummer')),
            ],
            options={
                'verbose_name': 'Telefonnummer',
                'verbose_name_plural': 'Telefonnummer',
            },
            bases=('juntagrico.contact',),
        ),
        migrations.CreateModel(
            name='RecuringJob',
            fields=[
                ('job_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='juntagrico.job')),
                ('additional_description',
                 models.TextField(blank=True, default='', verbose_name='Zusätzliche Beschreibung')),
                ('duration_override', models.FloatField(blank=True, default=None,
                                                        help_text='Wenn nicht angegeben, wird die Standard-Dauer von der Jobart übernommen.',
                                                        null=True,
                                                        validators=[django.core.validators.MinValueValidator(0)],
                                                        verbose_name='Dauer in Stunden (Überschreibend)')),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
            },
            bases=('juntagrico.job',),
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('billable_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='juntagrico.billable')),
                ('value', models.DecimalField(decimal_places=2, default=juntagrico.entity.share.share_value_default,
                                              max_digits=8, verbose_name='Wert')),
                ('creation_date',
                 models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Erzeugt am')),
                ('paid_date', models.DateField(blank=True, null=True, verbose_name='Bezahlt am')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='Ausgestellt am')),
                ('booking_date', models.DateField(blank=True, null=True, verbose_name='Eingebucht am')),
                ('cancelled_date', models.DateField(blank=True, null=True, verbose_name='Gekündigt am')),
                ('termination_date', models.DateField(blank=True, null=True, verbose_name='Gekündigt auf')),
                ('payback_date', models.DateField(blank=True, null=True, verbose_name='Zurückbezahlt am')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Anteilschein Nummer')),
                ('sent_back', models.BooleanField(default=False, verbose_name='Zurückgesandt')),
                ('reason_for_acquisition', models.PositiveIntegerField(blank=True, choices=[(1, 'Gründungsmitglied'),
                                                                                            (2, 'Beitrittserklärung'), (
                                                                                            3,
                                                                                            'Beitritts- und Übertragungserklärung'),
                                                                                            (
                                                                                            4, 'Übertragungserklärung'),
                                                                                            (5, 'Erhöhung der Anteile'),
                                                                                            (6,
                                                                                             'Betriebsbeteiligung - Lohn')],
                                                                       null=True, verbose_name='Grund des Erwerbs')),
                ('reason_for_cancellation', models.PositiveIntegerField(blank=True, choices=[(1, 'Kündigung'), (
                2, 'Kündigung und Übertragungserklärung'), (3, 'Ausschluss'), (4, 'Tod')], null=True,
                                                                        verbose_name='Grund der Kündigung')),
                ('notes', models.TextField(blank=True, default='',
                                           help_text='Notizen für Administration. Nicht sichtbar für Mitglied',
                                           verbose_name='Notizen')),
            ],
            options={
                'verbose_name': 'Anteilschein',
                'verbose_name_plural': 'Anteilscheine',
                'permissions': [('notified_on_share_creation', 'Wird bei Anteilschein Erstellung informiert'),
                                ('notified_on_share_cancellation', 'Wird bei Anteilschein Kündigung informiert')],
            },
            bases=('juntagrico.billable',),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('billable_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='juntagrico.billable')),
                ('creation_date', models.DateField(auto_now_add=True, null=True, verbose_name='Erstellungsdatum')),
                ('activation_date', models.DateField(blank=True, null=True, verbose_name='Aktivierungsdatum')),
                ('cancellation_date', models.DateField(blank=True, null=True, verbose_name='Kündigungsdatum')),
                ('deactivation_date', models.DateField(blank=True, null=True, verbose_name='Deaktivierungsdatum')),
                ('nickname',
                 models.CharField(blank=True, help_text='Ersetzt die Mit-Abo-BezieherInnen auf der Depot-Liste.',
                                  max_length=30, verbose_name='Spitzname')),
                ('start_date', models.DateField(default=juntagrico.util.temporal.start_of_next_business_year,
                                                verbose_name='Gewünschtes Startdatum')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Gewünschtes Enddatum')),
                ('notes',
                 models.TextField(blank=True, help_text='Notizen für Administration. Nicht sichtbar für Mitglied',
                                  verbose_name='Notizen')),
            ],
            options={
                'verbose_name': 'Abo',
                'verbose_name_plural': 'Abos',
                'permissions': [('can_filter_subscriptions', 'Benutzer kann Abo filtern'),
                                ('can_change_deactivated_subscriptions', 'Benutzer kann deaktivierte Abo ändern'),
                                ('notified_on_depot_change', 'Wird bei Depot-Änderung informiert'),
                                ('notified_on_subscription_creation', 'Wird bei Abo Erstellung informiert'),
                                ('notified_on_subscription_cancellation', 'Wird bei Abo Kündigung informiert')],
            },
            bases=('juntagrico.billable', models.Model),
        ),
        migrations.CreateModel(
            name='TextContact',
            fields=[
                ('contact_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='juntagrico.contact')),
                ('text', models.TextField(verbose_name='Kontaktbeschrieb')),
            ],
            options={
                'verbose_name': 'Freier Kontaktbeschrieb',
                'verbose_name_plural': 'Freie Kontaktbeschriebe',
            },
            bases=('juntagrico.contact',),
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('long_name', models.CharField(blank=True, max_length=100, verbose_name='Langer Name')),
                ('shares', models.PositiveIntegerField(default=0, verbose_name='Anz benötigter Anteilsscheine')),
                ('required_assignments', models.PositiveIntegerField(verbose_name='Anz benötigter Arbeitseinsätze')),
                ('required_core_assignments',
                 models.PositiveIntegerField(default=0, verbose_name='Anz benötigter Kern Arbeitseinsätze')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Preis')),
                ('visible', models.BooleanField(default=True, verbose_name='Sichtbar')),
                ('trial', models.BooleanField(default=False, verbose_name='Probe-Abo')),
                ('trial_days', models.IntegerField(default=0, verbose_name='Probe-Abo Dauer in Tagen')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Reihenfolge')),
                ('interval', models.PositiveIntegerField(default=1,
                                                         help_text='Intervall der Lieferung in Wochen,1 heisst jede Woche, 2 heisst alle 2 Wochen, usw.',
                                                         validators=[django.core.validators.MinValueValidator(1)],
                                                         verbose_name='Intervall')),
                ('offset', models.PositiveIntegerField(default=0,
                                                       help_text='Versatz der Lieferung in Wochen, 0 entspricht einer Lieferung ab der ersten Kalenderwoche, 1 entspricht einer Lieferung ab der zweiten Kalenderwoche, usw.',
                                                       verbose_name='Versatz')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='types',
                                           to='juntagrico.subscriptionsize', verbose_name='Grösse')),
            ],
            options={
                'verbose_name': 'Abo-Typ',
                'verbose_name_plural': 'Abo-Typen',
                'ordering': ['sort_order'],
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='SubscriptionPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True, null=True, verbose_name='Erstellungsdatum')),
                ('activation_date', models.DateField(blank=True, null=True, verbose_name='Aktivierungsdatum')),
                ('cancellation_date', models.DateField(blank=True, null=True, verbose_name='Kündigungsdatum')),
                ('deactivation_date', models.DateField(blank=True, null=True, verbose_name='Deaktivierungsdatum')),
                ('type',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscription_parts',
                                   to='juntagrico.subscriptiontype', verbose_name='Abo-Typ')),
            ],
            options={
                'verbose_name': 'Abo Bestandteil',
                'verbose_name_plural': 'Abo Bestandteile',
                'permissions': [
                    ('notified_on_subscriptionpart_creation', 'Wird bei Abo Bestandteil Erstellung informiert'),
                    ('notified_on_subscriptionpart_cancellation', 'Wird bei Abo Bestandteil Kündigung informiert')],
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='SubscriptionMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_date', models.DateField(blank=True, help_text='Erster Tag an dem Abo bezogen wird', null=True,
                                               verbose_name='Beitrittsdatum')),
                ('leave_date', models.DateField(blank=True, help_text='Letzter Tag an dem Abo bezogen wird', null=True,
                                                verbose_name='Austrittsdatum')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='juntagrico.member',
                                             verbose_name='Mitglied')),
            ],
            options={
                'verbose_name': 'Abo-Mitgliedschaft',
                'verbose_name_plural': 'Abo-Mitgliedschaften',
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='JobType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Eindeutiger Name des Einsatzes', max_length=100, unique=True,
                                          verbose_name='Name')),
                ('displayed_name',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name='Angezeigter Name')),
                ('description', models.TextField(default='', verbose_name='Beschreibung')),
                ('default_duration', models.FloatField(help_text='Standard-Dauer für diese Jobart',
                                                       validators=[django.core.validators.MinValueValidator(0)],
                                                       verbose_name='Dauer in Stunden')),
                ('visible', models.BooleanField(default=True, verbose_name='Sichtbar')),
                ('activityarea',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.activityarea',
                                   verbose_name='Tätigkeitsbereich')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.location',
                                               verbose_name='Ort')),
            ],
            options={
                'verbose_name': 'Jobart',
                'verbose_name_plural': 'Jobarten',
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='JobExtra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('per_member', models.BooleanField(default=False, verbose_name='jeder kann Extra auswählen')),
                ('extra_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='job_types_set',
                                   to='juntagrico.jobextratype')),
                ('recuring_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                                    related_name='job_extras_set', to='juntagrico.jobtype')),
            ],
            options={
                'verbose_name': 'JobExtra',
                'verbose_name_plural': 'JobExtras',
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='Depot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Depot Name')),
                ('weekday', models.PositiveIntegerField(
                    choices=[(1, 'Montag'), (2, 'Dienstag'), (3, 'Mittwoch'), (4, 'Donnerstag'), (5, 'Freitag'),
                             (6, 'Samstag'), (7, 'Sonntag')], verbose_name='Wochentag')),
                ('capacity', models.PositiveIntegerField(default=0, verbose_name='Kapazität')),
                ('description', models.TextField(blank=True, default='', verbose_name='Beschreibung')),
                ('access_information', models.TextField(default='', help_text='Nur für Mitglieder des/r Depot sichtbar',
                                                        verbose_name='Zugangsbeschreibung')),
                ('depot_list', models.BooleanField(default=True, verbose_name='Sichtbar auf Depotliste')),
                ('visible', models.BooleanField(default=True, verbose_name='Sichtbar')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Reihenfolge')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.member')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.location',
                                               verbose_name='Ort')),
                ('tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                           related_name='depots', to='juntagrico.tour', verbose_name='Ausfahrt')),
            ],
            options={
                'verbose_name': 'Depot',
                'verbose_name_plural': 'Depots',
                'ordering': ['sort_order'],
                'permissions': (('is_depot_admin', 'Benutzer ist Depot Admin'),),
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='DeliveryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Name')),
                ('amount', models.CharField(default='', max_length=100, verbose_name='Menge')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Kommentar')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items',
                                               to='juntagrico.delivery', verbose_name='Lieferung')),
            ],
            options={
                'verbose_name': 'Lieferobjekt',
                'verbose_name_plural': 'Lieferobjekte',
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.AddField(
            model_name='delivery',
            name='subscription_size',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.subscriptionsize',
                                    verbose_name='Abo-Grösse'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='tour',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    to='juntagrico.tour', verbose_name='Ausfahrt'),
        ),
        migrations.CreateModel(
            name='BillingPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preis')),
                ('start_day', models.PositiveIntegerField(verbose_name='Start Tag')),
                ('start_month', models.PositiveIntegerField(
                    choices=[(1, 'Januar'), (2, 'Februar'), (3, 'März'), (4, 'April'), (5, 'Mai'), (6, 'Juni'),
                             (7, 'Juli'), (8, 'August'), (9, 'September'), (10, 'Oktober'), (11, 'November'),
                             (12, 'Dezember')], verbose_name='Start Monat')),
                ('end_day', models.PositiveIntegerField(verbose_name='End Tag')),
                ('end_month', models.PositiveIntegerField(
                    choices=[(1, 'Januar'), (2, 'Februar'), (3, 'März'), (4, 'April'), (5, 'Mai'), (6, 'Juni'),
                             (7, 'Juli'), (8, 'August'), (9, 'September'), (10, 'Oktober'), (11, 'November'),
                             (12, 'Dezember')], verbose_name='End Monat')),
                ('cancel_day', models.PositiveIntegerField(verbose_name='Kündigungs Tag')),
                ('cancel_month', models.PositiveIntegerField(
                    choices=[(1, 'Januar'), (2, 'Februar'), (3, 'März'), (4, 'April'), (5, 'Mai'), (6, 'Juni'),
                             (7, 'Juli'), (8, 'August'), (9, 'September'), (10, 'Oktober'), (11, 'November'),
                             (12, 'Dezember')], verbose_name='Kündigungs Monat')),
                ('code', models.TextField(blank=True, default='', verbose_name='Code für Teilabrechnung')),
                ('type',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='periods',
                                   to='juntagrico.subscriptiontype')),
            ],
            options={
                'verbose_name': 'Verrechnungsperiode',
                'verbose_name_plural': 'Verrechnungsperioden',
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('core_cache', models.BooleanField(default=False, verbose_name='Kernbereich')),
                ('amount', models.FloatField(verbose_name='Wert')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.job')),
                ('job_extras', models.ManyToManyField(blank=True, related_name='assignments', to='juntagrico.jobextra',
                                                      verbose_name='Job Extras')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.member',
                                             verbose_name='Mitglied')),
            ],
            options={
                'verbose_name': 'Arbeitseinsatz',
                'verbose_name_plural': 'Arbeitseinsätze',
            },
            bases=(models.Model, juntagrico.entity.OldHolder),
        ),
        migrations.AddField(
            model_name='activityarea',
            name='coordinator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.member',
                                    verbose_name='KoordinatorIn'),
        ),
        migrations.AddField(
            model_name='activityarea',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='areas', to='juntagrico.member',
                                         verbose_name='Mitglieder'),
        ),
        migrations.AddConstraint(
            model_name='subscriptionsize',
            constraint=models.UniqueConstraint(fields=('name', 'product'), name='unique_name_product'),
        ),
        migrations.AddConstraint(
            model_name='subscriptionsize',
            constraint=models.UniqueConstraint(fields=('units', 'product'), name='unique_units_product'),
        ),
        migrations.AddField(
            model_name='subscriptionpart',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts',
                                    to='juntagrico.subscription', verbose_name='Abo'),
        ),
        migrations.AddField(
            model_name='subscriptionmembership',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='juntagrico.subscription',
                                    verbose_name='Abo'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='depot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscription_set',
                                    to='juntagrico.depot'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='future_depot',
            field=models.ForeignKey(blank=True, help_text='Nur setzen, wenn Depot geändert werden soll', null=True,
                                    on_delete=django.db.models.deletion.PROTECT, related_name='future_subscription_set',
                                    to='juntagrico.depot', verbose_name='Zukünftiges Depot'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='primary_member',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    related_name='subscription_primary', to='juntagrico.member',
                                    verbose_name='Haupt-Abo-BezieherIn'),
        ),
        migrations.AddField(
            model_name='share',
            name='member',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='juntagrico.member'),
        ),
        migrations.AddField(
            model_name='recuringjob',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.jobtype',
                                    verbose_name='Jobart'),
        ),
        migrations.AddField(
            model_name='onetimejob',
            name='activityarea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.activityarea',
                                    verbose_name='Tätigkeitsbereich'),
        ),
        migrations.AddField(
            model_name='onetimejob',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.location',
                                    verbose_name='Ort'),
        ),
        migrations.AddField(
            model_name='membercontact',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='juntagrico.member',
                                    verbose_name='Mitglied'),
        ),
        migrations.AddField(
            model_name='jobextra',
            name='onetime_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    related_name='job_extras_set', to='juntagrico.onetimejob'),
        ),
        migrations.AddConstraint(
            model_name='delivery',
            constraint=models.UniqueConstraint(fields=('delivery_date', 'tour', 'subscription_size'),
                                               name='unique_delivery'),
        ),
        migrations.AlterUniqueTogether(
            name='subscriptionmembership',
            unique_together={('member', 'subscription')},
        ),
    ]
